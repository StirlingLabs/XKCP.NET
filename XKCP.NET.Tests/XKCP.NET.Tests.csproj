<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>

    <IsPackable>false</IsPackable>

    <RootNamespace>StirlingLabs</RootNamespace>
    <RuntimeIdentifier>$(NETCoreSdkRuntimeIdentifier)</RuntimeIdentifier>
    <RuntimeIdentifier Condition="'$(RuntimeIdentifier)'==''">$([System.Runtime.InteropServices.RuntimeInformation]::RuntimeIdentifier)</RuntimeIdentifier>
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutputFormat>lcov</CoverletOutputFormat>
    <CoverletOutput>../coverage/</CoverletOutput>
    <!--<DeterministicReport>true</DeterministicReport>-->
    <DeterministicSourcePaths>true</DeterministicSourcePaths>
    <LangVersion>10</LangVersion>
    <AssemblyName>StirlingLabs.XKCP.NET.Tests</AssemblyName>
  </PropertyGroup>

  <Choose>
    <When Condition="$(RuntimeIdentifier.StartsWith('win'))">
      <PropertyGroup>
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
      </PropertyGroup>
    </When>
    <When Condition="$(RuntimeIdentifier.StartsWith('osx'))">
      <PropertyGroup>
        <RuntimeIdentifier>osx</RuntimeIdentifier>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <RuntimeIdentifier>linux-x64</RuntimeIdentifier>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <ItemGroup>
    <PackageReference Include="NUnit" Version="3.13.3" />
    <PackageReference Include="NUnit3TestAdapter" Version="4.2.1" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.3.0" />
    <PackageReference Include="coverlet.collector" Version="3.1.2" PrivateAssets="all" />
    <PackageReference Include="coverlet.msbuild" Version="3.1.2" PrivateAssets="all" />
    <PackageReference Include="GitHubActionsTestLogger" Version="2.0.1" PrivateAssets="all" />
    <PackageReference Include="ReportGenerator" Version="5.1.9" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\XKCP.NET\XKCP.NET.csproj">
      <Properties>TFM=$(TargetFramework);RID=$(RuntimeIdentifier)</Properties>
      <SetTargetFramework>TargetFramework=$(TargetFramework)</SetTargetFramework>
    </ProjectReference>
  </ItemGroup>
  
  <Target Name="GenerateHtmlCoverageReport" AfterTargets="GenerateCoverageResultAfterTest">
    <!-- remove absolute path using backslashes for windows -->
    <ReplaceFileTextByLines Condition="$(OS.StartsWith('Windows'))" InputFilename="@(CoverletReport)" OutputFilename="@(CoverletReport)" MatchText="$([System.IO.Path]::GetFullPath('..\XKCP.NET\'))" ReplacementText="" />

    <!-- remove absolute path using forward slashes for other platforms -->
    <ReplaceFileTextByLines Condition="!$(OS.StartsWith('Windows'))" InputFilename="@(CoverletReport)" OutputFilename="@(CoverletReport)" MatchText="$([System.IO.Path]::GetFullPath('../XKCP.NET/'))" ReplacementText="" />

    <!-- generate markdown coverage report and badges -->
    <ReportGenerator ReportFiles="@(CoverletReport)" ReportTypes="MarkdownSummary;Badges" SourceDirectories="../XKCP.NET" TargetDirectory="../coverage/" />
  </Target>

  <!-- task to replace text line for line -->
  <UsingTask TaskName="ReplaceFileTextByLines" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchText ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="false" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.Linq" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
            File.WriteAllLines(
                OutputFilename,
                File.ReadAllLines(InputFilename)
                    .Select(l => l.Replace(MatchText, ReplacementText))
            );
          ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="RIDCheck" BeforeTargets="Build">
    <Error Condition="'$(TargetFramework)'==''" Text="TargetFramework is not specified!" />
    <Error Condition="'$(RuntimeIdentifier)'==''" Text="RuntimeIdentifier is not specified!" />
  </Target>
</Project>